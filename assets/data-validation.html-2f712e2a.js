import{_ as p,M as t,p as o,q as e,R as n,t as s,N as c,a1 as l}from"./framework-96b046e1.js";const i={},r=n("h1",{id:"data-validation",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#data-validation","aria-hidden":"true"},"#"),s(" Data Validation")],-1),u=n("h2",{id:"class-validator",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#class-validator","aria-hidden":"true"},"#"),s(" Class Validator")],-1),k={href:"https://openbase.com/js/class-validator/documentation#validation-messages",target:"_blank",rel:"noopener noreferrer"},d=l(`<h2 id="class-transformer" tabindex="-1"><a class="header-anchor" href="#class-transformer" aria-hidden="true">#</a> Class Transformer</h2><h3 id="_1-how-to-write-custom-validation-decorators" tabindex="-1"><a class="header-anchor" href="#_1-how-to-write-custom-validation-decorators" aria-hidden="true">#</a> 1. How to write custom validation decorators</h3><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">/* eslint-disable @typescript-eslint/naming-convention */</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>
  registerDecorator<span class="token punctuation">,</span>
  ValidationArguments<span class="token punctuation">,</span>
  ValidationOptions<span class="token punctuation">,</span>
<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;class-validator&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">IsValidTime</span><span class="token punctuation">(</span>validationOptions<span class="token operator">?</span><span class="token operator">:</span> ValidationOptions<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>object<span class="token operator">:</span> Object<span class="token punctuation">,</span> propertyName<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">registerDecorator</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      name<span class="token operator">:</span> <span class="token string">&quot;IsValidTime&quot;</span><span class="token punctuation">,</span>
      target<span class="token operator">:</span> object<span class="token punctuation">.</span>constructor<span class="token punctuation">,</span>
      propertyName<span class="token operator">:</span> propertyName<span class="token punctuation">,</span>
      options<span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token operator">...</span>validationOptions<span class="token punctuation">,</span>
        message<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>propertyName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> is not a valid time format. It must be HH:mm:ss. Eg: 17:40:00</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      validator<span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token function">validate</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> args<span class="token operator">:</span> ValidationArguments<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> value
            <span class="token operator">?</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(?:[01]\\d|2[0123]):(?:[012345]\\d):(?:[012345]\\d)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
            <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// usage</span>
<span class="token decorator"><span class="token at operator">@</span><span class="token function">property</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token decorator"><span class="token at operator">@</span><span class="token function">IsValidTime</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
timeProp<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="common-regex" tabindex="-1"><a class="header-anchor" href="#common-regex" aria-hidden="true">#</a> Common Regex</h2><ol><li>Time</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// Time Format HH:MM 12-hour, optional leading 0</span>
<span class="token operator">/</span><span class="token operator">^</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token operator">?</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">|</span><span class="token number">1</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span>$<span class="token operator">/</span>
<span class="token comment">// Time Format HH:MM 12-hour, optional leading 0, Meridiems (AM/PM)</span>
<span class="token operator">/</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">|</span><span class="token number">0</span><span class="token operator">?</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">?</span><span class="token punctuation">(</span><span class="token punctuation">[</span>AaPp<span class="token punctuation">]</span><span class="token punctuation">[</span>Mm<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">/</span>
<span class="token comment">// Time Format HH:MM 24-hour with leading 0</span>
<span class="token operator">/</span><span class="token operator">^</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">|</span><span class="token number">1</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">|</span><span class="token number">2</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span>$<span class="token operator">/</span>
<span class="token comment">// Time Format HH:MM 24-hour, optional leading 0</span>
<span class="token operator">/</span><span class="token operator">^</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">|</span><span class="token number">0</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">|</span><span class="token number">1</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">|</span><span class="token number">2</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span>$<span class="token operator">/</span>
<span class="token comment">// Time Format HH:MM:SS 24-hour</span>
<span class="token operator">/</span><span class="token punctuation">(</span><span class="token operator">?</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token number">01</span><span class="token punctuation">]</span>\\d<span class="token operator">|</span><span class="token number">2</span><span class="token punctuation">[</span><span class="token number">0123</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token punctuation">(</span><span class="token operator">?</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token number">012345</span><span class="token punctuation">]</span>\\d<span class="token punctuation">)</span><span class="token operator">:</span><span class="token punctuation">(</span><span class="token operator">?</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token number">012345</span><span class="token punctuation">]</span>\\d<span class="token punctuation">)</span><span class="token operator">/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6);function m(v,b){const a=t("ExternalLinkIcon");return o(),e("div",null,[r,u,n("ul",null,[n("li",null,[n("a",k,[s("Full Example"),c(a)])])]),d])}const g=p(i,[["render",m],["__file","data-validation.html.vue"]]);export{g as default};
